apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15.0
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_PASSWORD
            value: "newspwd"
          - name: POSTGRES_USER
            value: "newsuser"
          - name: POSTGRES_DB
            value: "newsdb"

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
  - port: 5432


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 4
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: franciscoalves90/devops4devs:v3
          resources:
            requests:
              ephemeral-storage: "2Gi"
            limits:
              ephemeral-storage: "2Gi"
          ports:
            - containerPort: 8080
          env:
            - name: DB_DATABASE
              value: "newsdb"
            - name: DB_USERNAME
              value: "newsuser"
            - name: DB_PASSWORD
              value: "newspwd"
            - name: DB_HOST
              value: postgres
            - name: AWS_ACCESS_KEY
              value: "AKIA4ZIJJ2KT3XQ4TIJX"
            - name: AWS_ACCESS_SECRET
              value: "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"
            - name: AWS_REGION
              value: "us-east-1"
            - name: AWS_S3_BUCKET_NAME
              value: "newsbucketfiles"
            - name: STORAGE_TYPE
              value: "S3"

---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  selector:
    app: web
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer

---

# Ingress
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-web
#   annotations:
#     kubernetes.io/ingress.class: traefik
#     ingress.kubernetes.io/ssl-redirect: "false"
# spec:
#   rules:
#     - host: app01.top-code.dev.br
#       http:
#         paths:
#           - backend:
#               service:
#                 name: web
#                 port:
#                   number: 80
#             path: /
#             pathType: Prefix